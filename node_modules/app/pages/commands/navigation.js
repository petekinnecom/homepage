'use strict';

var terminal = require('app/terminal/model');
var pages = require('app/pages/cache_machine/pages');

function Navigation(router){

  var commands = [];
  pages.forEach(function(page){
    if (commands.indexOf(page.command) === -1){
      commands.push(page.command);
    }
  });

  var routeToPage = function(match) {
    var name = match[1].trim();

    var matchedPage = null;
    pages.forEach(function(page){
      if (page.name === name){
        matchedPage = page;
      }
    });

    if (matchedPage === null){
      if (name === "") {
        terminal.log('available pages:');
        pages.map(function(p){return p.name;}).forEach(function(name){terminal.log(name, {data: {input: name}});});
        terminal.log('or try the <a href="#" data-input="nav">nav</a> command');
        throw Error('');
      }
      else {
        throw Error('Could not find page: ' + name);
      }
    }

    terminal.log('Loaded page ' + name);

    router.push({
      controller: 'pages',
      id: matchedPage.id
    });

    //TODO: hack
    window.setTimeout(terminal.close.bind(terminal), 1000);
  };

  commands.forEach(function(command){
    terminal.registerCommand({
      matcher: new RegExp('^' + command + ' (.*)'),
      fn: routeToPage
    });
  });

  // we get this for free since 'routeToPage' doesn't
  // deal with duplicately named pages
  terminal.registerCommand({
    matcher: "page",
    fn: routeToPage
  });
}

module.exports = Navigation;
