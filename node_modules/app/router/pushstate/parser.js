function Parser(type, resources){
  this.resources = resources;
  this.root = new RegExp('^(http://[^/]+)?/');
}

Parser.prototype.parse = function(urlOrPath){
  var path = urlOrPath.replace(this.root, '');

  if (path === ""){
    return "root";
  }

  // use a 'for' loop, so that we can just
  // return the first match.  Otherwise, we
  // need to map, then filter.

  for (var i=0; i < this.resources.length; i++){
    var resource, regex, match;

    resource = this.resources[i];
    regex = new RegExp('^' + resource + '/(.*).html');
    match = path.match(regex);

    if (match) {
      return {
        controller: resource,
        id: match[1],
      };
    }
  }

  throw Error('path parse error: resource not found');
};

Parser.prototype.construct = function(resource){
  return '/' + resource.controller + '/' + resource.id + '.html';
};

module.exports = Parser;
