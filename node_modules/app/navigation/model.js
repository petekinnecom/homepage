"use strict";
var terminal = require('app/terminal/model');
var pagesData = require('app/pages/cache_machine/pages_data');

var pagesGroupedByFolder = function(){

  var folders = [];
  pagesData.forEach(function(page){
    if (folders.indexOf(page.folder) === -1){
      folders.push(page.folder);
    }
  });
  folders.sort();

  var nodes = {};
  folders.forEach(function(folder){
    nodes[folder] = pagesData.filter(function(page){
      return page.folder == folder;
    });
  });

  return nodes;
};

var getCurrentPage = function(){
  var currentPage = null;

  pagesData.forEach(function(page){
    if (window.location.pathname === page.path.replace(/\/chunks/, '')){
      currentPage = page;
    }
  });

  if (!currentPage){
    throw new Error("could not identify current page");
  }

  return currentPage;
};


function Commander(){

  var showTree = function(match){
    var currentPage, folderToExpand, nodes;
    terminal.open();
    terminal.clear();

    currentPage = getCurrentPage();
    folderToExpand = match[1] || currentPage.folder;
    nodes = pagesGroupedByFolder();

    Object.keys(nodes).forEach(function(folder){
      var $folderLine;

      $folderLine = $('<a></a>');
      $folderLine.attr('data-input', 'nav ' + folder);
      $folderLine.addClass('terminal-folder');

      if (folderToExpand == folder) {

        $folderLine.html('&#9660; ' + folder + ':');
        $folderLine.addClass('terminal-folder--active');
        terminal.log($folderLine, {enqueue: false});

        nodes[folder].forEach(function(page){
          if (page == getCurrentPage()){
            terminal.log("&nbsp;&nbsp;- " + page.name, {enqueue: false});
          }
          else {
            terminal.log("&nbsp;&nbsp;- " + page.name, {data: {input: "page " + page.name}, enqueue: false});
          }

        });
      }
      else {
        $folderLine.html('&#9654; ' + folder);
        terminal.log($folderLine, {enqueue: false});
      }
    });
  };

  terminal.registerCommand({
    matcher: "nav",
    fn: showTree,
  });

}

module.exports = Commander;
