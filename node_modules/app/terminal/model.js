EventEmitter = require('events').EventEmitter;
Processor = require('app/terminal/processor');

function Model(){
  this.events = new EventEmitter();
  this.lines = [];
  this.processor = new Processor();
}

Model.prototype.input = function(input) {
  add.call(this, {
    type: 'input',
    text: input,
  });

  this.processor.process(input);
};

Model.prototype.log = function(output) {
  add.call(this,{
    type: 'log',
    text: output,
  });
};

//private, must be bound

var add = function(line) {
  this.lines.push(line);
  this.events.emit('lineAdded', line);
};

// singleton, because it will be easier
// than trying to pass the context around
// through asyncronous event handlers (e.g.,
// on url change...)

module.exports = new Model();
