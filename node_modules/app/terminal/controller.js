var OutputView = require('app/terminal/output/view');
var InputView = require('app/terminal/input/view');
var terminal = require('app/terminal/model');

var $ = require('jquery');
//TODO: refactor this

var inputView;
function Controller($container){
  this.$container = $container;

  var $output, $input, outputView,  $hiddenInput;

  $output = $container.find('.terminal-output');

  $input = $container.find('.terminal-input');
  $hiddenInput = $container.find('.terminal-input--hidden');

  outputView = new OutputView($output);
  inputView = new InputView($input, $hiddenInput);

  $('.terminal').on('keydown', inputView.keydown.bind(inputView));
  $('.terminal').keypress(inputView.keypress.bind(inputView));

  $('body').on('click', function(event){
    if ( $.contains( $('.terminal')[0], event.target) ||  $('.terminal')[0] == event.target ){
      maximize();
    }
    else {
      minimize();
    }
  });

  terminal.events.on('close', minimize.bind(this));
}

var maximize = function(){
  if (! isMaximized()){
    setMaximized(true);
  }
};

var minimize = function(){
  if (isMaximized()){
    setMaximized(false);
    //TODO: listen for animation end.
    setTimeout(function(){
      inputView.terminalMinimized();
    }, 2100);
  }
};

var isMaximized = function(){
  return $('body').attr('data-maximized') == 'true';
};

var setMaximized = function(bool){
  $('body').attr('data-maximized', bool.toString());
};

module.exports = Controller;
