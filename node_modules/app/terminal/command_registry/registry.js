'use strict';
var Command = require('app/terminal/command_registry/command');

function Registry(){
  this.commands = [];
}

// for convenience, let callers register command directly
// using this method
Registry.prototype.register = function(commandOrArgs){
  var command;

  if (commandOrArgs instanceof Command){
    command = commandOrArgs;
  }
  else {
    command = new Command(commandOrArgs);
  }

  this.commands.push(command);
};

Registry.prototype.findHandler = function(input){
  var handlers = this.commands.filter(
    function(command){ return command.isHandler(input); }
  ).sort(
    function(command){ return command.priority; }
  );

  if (handlers.length === 0){
    throw Error('No handlers found');
  }

  // ensure that we have exactly one command with the
  // lowest priority
  var lowestPriority = handlers.filter(function(command){return command.priority <= handlers[0].priority;});

  if (lowestPriority.length > 1){
    throw Error('More than one handler identified');
  }

  return handlers[0];
};

module.exports = Registry;
