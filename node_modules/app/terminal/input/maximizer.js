$ = require('jquery');
terminal = require('app/terminal/model');

var time = 2100;
var $body;

//TODO: listen for animation end instead of setTimeout

function Maximizer(){
  $body = $('body');
}

Maximizer.prototype.toggle = function(event) {

  if ( shouldMaximize(event) ){
    return this.maximize();
  }
  else {
    return this.minimize();
  }

};

Maximizer.prototype.maximize = function(){

  var deferred = $.Deferred();

  if (! isMaximized()){
    setMaximized(true);
    setTimeout(function(){
      deferred.resolve('maximized');
    }, time);
  }
  else {
    deferred.resolve('noChange');
  }

  return deferred.promise();

};

Maximizer.prototype.minimize = function(){

  var deferred = $.Deferred();

  if (isMaximized()){
    setMaximized(false);
    setTimeout(function(){
      deferred.resolve('minimized');
    }, time);
  }
  else {
    deferred.resolve('noChange');
  }

  return deferred.promise();
};

//private, must be bound

var isMaximized = function(){
  return $body.attr('data-maximized') == 'true';
};

var setMaximized = function(bool){
  $body.attr('data-maximized', bool.toString());
};

var shouldMaximize = function(event){
 return $.contains( $('.terminal')[0], event.target ) ||  ( $('.terminal')[0] == event.target );
};

module.exports = Maximizer;
