var terminal = require('app/terminal/model');
var $ = require('jquery');
var escape = require('app/utils/regex_escape');

var ENTER_KEY = 13;

function View($el, $hidden){

  $el.on('focus', function(event){
    event.preventDefault();
    $hidden.focus();
    placeCaretAtEnd($hidden);
  });

  $hidden.on('keyup', function(event){
    setCaret($el, $hidden);

    if (event.keyCode === ENTER_KEY) {
      event.preventDefault();
      process($el, $hidden);
    }
  });

  $hidden.on('keydown', function(event){
    setCaret($el, $hidden);
  });

  $hidden.on('blur', function(event) {
    renderCaret($el, $hidden.text(), '', '');
  });

}

var process = function($el, $hidden) {
  terminal.input($hidden.text());
  $el.text('');
  $hidden.text('');
  $hidden.focus();
  setCaret($el, $hidden);
};

var setCaret = function($el, $hidden) {
  var preCaret, underCaret, postCaret,
  regex, match, currentText, newText;

  preCaret = getStringBeforeCaret($hidden[0]);
  regex = new RegExp('^' + escape(preCaret) + '(.)?(.*)');

  currentText = $hidden[0].innerText;

  match = currentText.match(regex);

  if (!match) { throw { message: "can't find preCaret string :(" }; }

  underCaret = match[1];
  postCaret = match[2] || '';

  renderCaret($el, preCaret, underCaret, postCaret);
};

var renderCaret = function($el, pre, under, post){
  var $pre, $under, $post;

  $pre = $('<span></span>');
  $pre.text(pre);

  $under = $('<span class="caret"></span>');
  if (under){
    $under.text(under);
  }
  else {
    $under.html('&nbsp;');
  }

  $post = $('<span></span>');
  $post.text(post);

  $el.html([$pre, $under, $post]);

};

var getStringBeforeCaret = function(el){
  var selection, range;

  selection = window.getSelection();
  if (selection.rangeCount > 0) {
      range = selection.getRangeAt(0).cloneRange();
      range.collapse(true);
      range.setStart(el, 0);
      return range.toString();
  }

  console.log("must be a special key");

  throw {
    message: "must be a special key"
  };
};

var placeCaretAtEnd = function($el) {
  var el = $el[0];
  if (typeof window.getSelection != "undefined" && typeof document.createRange != "undefined") {
    var range = document.createRange();
    range.selectNodeContents(el);
    range.collapse(false);
    var sel = window.getSelection();
    sel.removeAllRanges();
    sel.addRange(range);
  }
  else if (typeof document.body.createTextRange != "undefined") {
    var textRange = document.body.createTextRange();
    textRange.moveToElementText(el);
    textRange.collapse(false);
    textRange.select();
  }
};

module.exports = View;
