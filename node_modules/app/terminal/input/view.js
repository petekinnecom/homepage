var terminal = require('app/terminal/model');
var $ = require('jquery');
var escape = require('app/utils/regex_escape');
var ShadowInput = require('app/terminal/input/shadow_input');

var ENTER_KEY = 13;

//TODO: Refactor this

function View($el, $hidden){
  this.$el = $el;

  this.shadowInput = new ShadowInput($hidden);
  this.$hidden = $hidden;

  this.$el.on('focus', function(event){event.preventDefault(); $hidden.focus();});

  this.$hidden.on('keyup', keyup.bind(this));
  this.$hidden.on('keydown', setCaret.bind(this, this.$el, this.$hidden));
  this.$hidden.on('blur', blur.bind(this));
}

View.prototype.set = function(text){
  this.$hidden.text(text);
  this.shadowInput.placeCaretAtEnd();
  setCaret.call(this);
};

View.prototype.add = function(text){
  var current = this.$hidden.text();
  this.set(current + text);
};

//private, must be bound

var keyup = function(event){
  setCaret.call(this);

  if (event.keyCode === ENTER_KEY) {
    event.preventDefault();
    process.call(this);
  }
};

var keydown = function(event){
  setCaret.call(this);
};

var blur =  function(event) {
  renderCaret.call(this, this.$hidden.text(), '', '');
};

var process = function() {
  terminal.input(this.$hidden.text());
  this.$el.text('');
  this.$hidden.text('');
  setCaret.call(this);
};

var setCaret = function() {
  var preCaret, underCaret, postCaret,
  regex, match, currentText, newText;

  preCaret = getStringBeforeCaret.call(this);
  regex = new RegExp('^' + escape(preCaret) + '(.)?(.*)');
  //currentText = this.$hidden[0].innerText;
  currentText = this.$hidden.text();
  match = currentText.match(regex);

  if (!match) { throw { message: "can't find preCaret string :(" }; }

  underCaret = match[1];
  postCaret = match[2] || '';

  renderCaret.call(this, preCaret, underCaret, postCaret);
};

var renderCaret = function(pre, under, post){
  var $pre, $under, $post;

  $pre = $('<span></span>');
  $pre.text(pre);

  $under = $('<span class="caret"></span>');
  if (under){
    $under.text(under);
  }
  else {
    $under.html('&nbsp;');
  }

  $post = $('<span></span>');
  $post.text(post);

  this.$el.html([$pre, $under, $post]);
};

var getStringBeforeCaret = function(){
  var selection, range, el;
  el = this.$hidden[0];
  selection = window.getSelection();
  if (selection.rangeCount > 0) {
      range = selection.getRangeAt(0).cloneRange();
      range.collapse(true);
      range.setStart(el, 0);
      return range.toString();
  }

  console.log("must be a special key");

  throw {
    message: "must be a special key"
  };
};

module.exports = View;
