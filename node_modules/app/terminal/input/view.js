var terminal = require('app/terminal/model');
var $ = require('jquery');
var ShadowInput = require('app/terminal/input/shadow_input');


function View($el, $hidden){
  this.$el = $el;
  this.$el.on('focus', focus.bind(this));

  this.shadowInput = new ShadowInput($hidden);
  this.shadowInput.events.on('changed', update.bind(this));

  terminal.events.on('setInput', this.set.bind(this));
  terminal.events.on('processStarted', hide.bind(this));
  terminal.events.on('processEnded', show.bind(this));
}

View.prototype.set = function(text){
  this.shadowInput.set(text);
};

View.prototype.add = function(text){
  this.shadowInput.add(text);
};

//private, must be bound

var focus = function(event) {
  event.preventDefault();
  this.shadowInput.focus();
};

var update = function(pre, under, post){
  var $pre, $under, $post;

  $pre = $('<span></span>');
  $pre.text(pre);

  $under = $('<span class="caret"></span>');
  if (under){
    $under.text(under);
  }
  else {
    $under.html('&nbsp;');
  }

  $post = $('<span></span>');
  $post.text(post);

  this.$el[0].scrollIntoView(true);
  this.$el.html([$pre, $under, $post]);
};

var hide = function(){
  //this.$el.detach();
};

var show = function(){
};
module.exports = View;
