var terminal = require('app/terminal/model');
var $ = require('jquery');
var EventEmitter = require('events').EventEmitter;


function View($el, $hidden){
  this.$el = $el;
  this.enabled = true;
  this.events = new EventEmitter();

  this.$el.on('focus', focus.bind(this));

  terminal.events.on('setInput', this.set.bind(this));
  terminal.events.on('processStarted', hide.bind(this));
  terminal.events.on('processEnded', show.bind(this));
}

View.prototype.set = function(text){
};

View.prototype.add = function(text){
};

//private, must be bound

var focus = function(event) {
  event.preventDefault();
  this.events.emit('focus');
};

var blur = function(event) {
  this.events.emit('blur');
};

var update = function(pre, under, post){
  var $pre, $under, $post;

  $pre = $('<span></span>');
  $pre.text(pre);

  $under = $('<span class="caret"></span>');
  if (under){
    $under.text(under);
  }
  else {
    $under.html('&nbsp;');
  }

  $post = $('<span></span>');
  $post.text(post);

  this.$el.html([$pre, $under, $post]);
};

var hide = function(){
  this.$el.hide();
  this.enabled = false;
};

var show = function(promptName){
  this.$el.attr('data-prompt-name', promptName);
  this.$el.show();
  //this.$el[0].scrollIntoView();
  this.enabled = true;
};

var run = function(text){
  if (this.enabled){
    terminal.input(text);
  }
};

module.exports = View;
