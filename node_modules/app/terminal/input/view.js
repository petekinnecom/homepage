var terminal = require('app/terminal/model');
var $ = require('jquery');
var ShadowInput = require('app/terminal/input/shadow_input');


function View($el, $hidden){
  this.$el = $el;

  this.shadowInput = new ShadowInput($hidden);
  this.shadowInput.events.on('blur', blur.bind(this));
  
  this.shadowInput.events.on('caretChanged', renderCaret.bind(this));

  this.$hidden = $hidden;

  this.$el.on('focus', focus.bind(this));

}

View.prototype.set = function(text){
  this.$hidden.text(text);
  this.shadowInput.placeCaretAtEnd();
  setCaret.call(this);
};

View.prototype.add = function(text){
  var current = this.$hidden.text();
  this.set(current + text);
};

//private, must be bound

var blur =  function(event) {
  renderCaret.call(this, this.$hidden.text(), '', '');
};

var focus = function(event) {
  event.preventDefault();
  this.shadowInput.focus();
};


var renderCaret = function(pre, under, post){
  var $pre, $under, $post;

  $pre = $('<span></span>');
  $pre.text(pre);

  $under = $('<span class="caret"></span>');
  if (under){
    $under.text(under);
  }
  else {
    $under.html('&nbsp;');
  }

  $post = $('<span></span>');
  $post.text(post);

  this.$el.html([$pre, $under, $post]);
};


module.exports = View;
