EventEmitter = require('events').EventEmitter;
TerminalInput = require('app/terminal2/input/model');
TerminalOutput = require('app/terminal2/output/model');

function Model(){
  this.events = new EventEmitter();
}

Model.prototype.initialize = function(prompt){
  this.output = new TerminalOutput();
  this.input = new TerminalInput(prompt, this.output);
};

Model.prototype.setChars = function(string) {
  this.input.setChars(string);
};

Model.prototype.addChar = function(char){
  this.input.addChar(char);
};

Model.prototype.run = function(){
  this.input.run();
};

Model.prototype.runInput = function(string) {
  this.input.setChars(string);
  this.input.run();
};

Model.prototype.interrupt = function(){
  this.input.interrupt();
};

Model.prototype.close = function(){
};

Model.prototype.fullscreen = function(){
};

Model.prototype.warn = function(string){
  this.output.warn(string);
};

Model.prototype.log = function(string){
  this.output.log(string);
};

Model.prototype.win = function(string){
  this.output.win(string);
};


// singleton, because it will be easier
// than trying to pass the context around
// through asyncronous event handlers (e.g.,
// on url change...)

module.exports = new Model();

