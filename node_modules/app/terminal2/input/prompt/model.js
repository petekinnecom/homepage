var EventEmitter = require('events').EventEmitter;

function Model(){
  this.events = new EventEmitter();
  this.chars = [];
  this.caret = 0;
}

Model.prototype.setChars = function(string){
  this.chars = string.split('');
  this.caret = this.chars.length;
};

Model.prototype.addChar = function(newChar){
  var before, after;

  before = cloneChars.call(this);
  after = before.splice(this.caret);

  this.chars = before.concat(newChar).concat(after);
  this.caret += 1;
  this.log();
};

Model.prototype.backspace = function(){
  if (this.caret > 0) {
    this.chars.splice(this.caret - 1, 1); 
    this.caret -= 1;
  }
};

Model.prototype.left_arrow = function(){
  if (this.caret > 0) {
    this.caret -= 1;
  }
};

Model.prototype.right_arrow = function(){
  if (this.caret < this.chars.length) {
    this.caret += 1;
  }
};

Model.prototype.delete = function(){
  if (this.caret < this.chars.length){
    this.chars.splice(this.caret, 1); 
  }
};

Model.prototype.up_arrow = function(){
  console.log('TODO: up_arrow');
};

Model.prototype.down_arrow = function(){
  console.log('TODO: down_arrow');
};

Model.prototype.enter = function(){
  var text = this.chars.join('');
  this.caret = 0;
  this.chars = [];

  this.events.emit('run', text);
};

Model.prototype.getString = function(){
  this.chars.join('');
};

Model.prototype.log = function(){
  console.log(this.chars);
  console.log(this.caret);
  console.log('---');
};

//Model.prototype.render = function(){
//  var pre, under, post, tmpChars,
//  $pre, $under, $post;

//  tmpChars =  cloneChars.call(this);

//  under = tmpChars[this.caret];
//  post = tmpChars.slice(this.caret + 1).join('');
//  tmpChars.splice(this.caret);
//  pre = tmpChars.join('');

//  $pre = $('<span></span>');
//  $pre.text(pre);

//  $under = $('<span class="caret"></span>');
//  if (under){
//    $under.text(under);
//  }
//  else {
//    $under.html('&nbsp;');
//  }

//  $post = $('<span></span>');
//  $post.text(post);

//  return [$pre, $under, $post];
//};

//private, must be bound
var cloneChars = function() {
  return this.chars.slice(0);
};

module.exports = Model;
